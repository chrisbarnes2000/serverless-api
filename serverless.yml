# serverless.yml

service: personal-journal-express

custom:
  tableName: 'EntryLogs-Table-${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["EntrylogsDynamoDBTable", "Arn" ] }
  environment:
    ENTRYLOGS_TABLE: ${self:custom.tableName}

# Each function instance will have the same code, but they'll be segmented for metrics purposes
functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
  getEntrylog:
    handler: index.handler
    events:
      - http: 'GET /entrylogs/{proxy+}'
  createEntrylogs:
    handler: index.handler
    events:
      - http: 'POST /entrylogs'

resources:
  Resources:
    EntrylogsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: entrylogID
            AttributeType: S
        KeySchema:
          -
            AttributeName: entrylogID
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}